{"name":"Pyladies-git-presentation","tagline":"PyLadies Berlin meetup, Feb 2016","body":"Who we are\r\n==========\r\n- Website: http://berlin.pyladies.com/\r\n- Meetup: http://www.meetup.com/PyLadies-Berlin/\r\n- Youtube: https://www.youtube.com/user/PyLadiesBerlin\r\n- Twitter: https://twitter.com/PyLadiesBer\r\n- GitHub: https://github.com/PyLadiesBerlin/materials\r\n\r\nWhat is git?\t\r\n================\r\n- Open source\r\n- Fully distributed\r\n- Fast\r\n- Support for non-linear development\r\n- Handles big projects\r\n\r\nCollaboration platforms\r\n=======================\r\n   https://github.com/  \r\n   https://github.com/explore  \r\n   https://github.com/integrations  \r\n   https://git-lfs.github.com/ - large repos  \r\n\r\n   https://bitbucket.org - more private repos for free  \r\n\r\nInstalling Git\r\n==============\r\n####Step: Install Git\r\n   **Windows**: It's recommended to download GitHub for Windows, which includes Git and has an easier install: windows.github.com. Use the Git Shell for your terminal.  \r\n   **Mac**: You can also download GitHub for Mac, which includes Git, mac.github.com (from Preferences, select the command line tools install), or download Git by itself at: git-scm.com/downloads and follow the installation instructions.  \r\n   **Linux: Debian-based Distribution**\r\n       $ sudo apt-get install git-all  \r\n   **Linux: Febora-based Distribution**\r\n       $ sudo yum install git-all  \r\n\r\nConfigure Git\r\n=============\r\n   git config --global user.name \"John Doe\"  \r\n\r\n   git config --global user.email johndoe@example.com\r\n\r\nChecking your settings\r\n=====================\r\n   git config --list  \r\n\r\n   git config user.name\r\n\r\nLet the game begin\r\n==================\r\n##### Create a new directory  \r\n  * mkdir hello  \r\n  * cd hello   \r\n\r\n##### Create a local repository  \r\n  * git init   \r\n\r\n##### Create a new file   \r\n  * <favourite_editor> foo.txt   \r\n\r\n##### Add the file to the staging area  \r\n  * git add foo.txt\r\n\r\nGit states & sections\r\n=====================\r\n   modified - working directory  \r\n   staged - staging area  \r\n       - git add <file_name>  \r\n   committed - .git directory  \r\n       - git commit\r\n\r\nhttp://www.git-scm.com/book/en/v2/Getting-Started-Git-Basics#The-Three-States\r\n\r\nLet the game begin\r\n==================\r\n##### Check the status of the files\r\n  * git status\r\n\r\n##### Commit the files\r\n  * git commit -m \"First Commit\" \r\n\r\n##### Check the history\r\n  * git log\r\n\r\n##### Create a new branch and checkout the branch\r\n  * git branch feature\r\n  * git checkout feature (git checkout -b <new_branch>)\r\n  * <favourite_editor>bar.txt - changing the file\r\n  * git status\r\n  * git add -p bar.txt\r\n  * git commit -m “Second commit”\r\n  * git checkout master\r\n  * git merge feature\r\n\r\n  * git checkout feature\r\n  * vim foo.txt\r\n  * git add foo.txt\r\n  * git commit -m “commited foo file from feature branch”\r\n\r\n##### We need to fix a bug in master\r\n  * git checkout master\r\n  * vim bar.txt\r\n  * git add bar.txt\r\n  * git commit -m “fix bug in master”\r\n\r\n  * git log --graph --decorate\r\n\r\n###### Let’s merge our master with the bug fix into feature branch and test our feature with the new changes.\r\n  * git checkout feature\r\n  * git merge master\r\n\r\nSharing our work\r\n================\r\n  * https://github.com/\r\n\r\nAlternative to github, more private repos for free\r\n  * https://bitbucket.org\r\n\r\nGitHub\r\n======\r\nUpload the repository to GitHub\r\n  * git push\r\n\r\nYou want to work on an existing project?\r\n  * Fork it\r\n  * git clone git@github.com:whatever folder-name\r\n\r\nUseful links\r\n============\r\nGit documentation:  \r\nhttp://www.git-scm.com/\r\n\r\nshort guides:  \r\nhttps://try.github.io//levels/1/challenges/1  \r\nhttps://guides.github.com/\r\n\r\ntools for learning about branching:  \r\nhttp://pcottle.github.io/learnGitBranching/  \r\nhttp://onlywei.github.io/explain-git-with-d3/#branch\r\n\r\nRepos history visualization\r\n  * gitk\r\n\r\nhelpful commands (cheat sheet):  \r\nhttps://training.github.com/kit/downloads/github-git-cheat-sheet.pdf","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}